[tool.black]
line-length = 120            # <- match Ruff
target-version = ["py312"]
extend-exclude = '''
^(
  package_control_channel/|
  \.venv/|
  build/|
  dist/|
  node_modules/|
  .*/migrations/
)
'''

[tool.isort]
profile = "black"
line_length = 120            # <- match Black/Ruff (keep if you're still using isort)
skip_glob = [
  "package_control_channel/**",
  ".venv/**",
  "build/**",
  "dist/**",
  "node_modules/**",
]

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = [
  "package_control_channel/**",
  ".venv/**",
  "build/**",
  "dist/**",
  "node_modules/**",
  "*/migrations/**",
]

[tool.ruff.lint]
select = ["E", "F", "I"]
# ignore = ["UP046"]  # <- remove; not using UP rules

[tool.ruff.lint.isort]
known-first-party = ["app"]  # optional but helpful

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
addopts = "--tb=short -v"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
pythonpath = ["."]
markers = [
  "anyio: marks tests as needing anyio (deselect with '-m \"not anyio\"')",
  "asyncio: marks tests as needing asyncio",
]
# If you use AnyIO, you can also set ANYIO_BACKEND=asyncio in CI env.

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = false
